<UserControl x:Class="Diffusion.Toolkit.Controls.PreviewPane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Diffusion.Toolkit.Controls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:classes="clr-namespace:Diffusion.Toolkit.Classes"
             xmlns:converters="clr-namespace:Diffusion.Toolkit.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:InverseBoolToVisibilityCollapsedConverter x:Key="invBoolToVisCol"></converters:InverseBoolToVisibilityCollapsedConverter>
            <converters:BoolToVisibilityCollapsedConverter x:Key="boolToVisCol"></converters:BoolToVisibilityCollapsedConverter>
            <converters:InverseBoolToVisibilityConverter x:Key="invBoolToVis"></converters:InverseBoolToVisibilityConverter>
            <converters:IntToVisibilityConverter x:Key="intToVis"></converters:IntToVisibilityConverter>
            <converters:BoolToBlurIntConverter x:Key="boolToBlur"></converters:BoolToBlurIntConverter>
            <converters:BoolToBlurIntMultiConverter x:Key="boolToBlurMulti"></converters:BoolToBlurIntMultiConverter>
            <converters:BoolToVisibilityConverter x:Key="boolToVis"></converters:BoolToVisibilityConverter>
            <converters:BoolToVisibilityMultiConverter x:Key="boolToVisMulti"></converters:BoolToVisibilityMultiConverter>
            <converters:InverseBoolToVisibilityMultiConverter x:Key="invBoolToVisMulti"></converters:InverseBoolToVisibilityMultiConverter>
            <converters:BoolToOpacityConverter x:Key="BoolToOpacity"></converters:BoolToOpacityConverter>
            <converters:ScrollBarVisibilityConverter x:Key="scrollBarVisibility"></converters:ScrollBarVisibilityConverter>
            <converters:StringToVisibilityConverter x:Key="strToVis"></converters:StringToVisibilityConverter>
            <converters:StretchConverter x:Key="stretch"></converters:StretchConverter>

            <Style x:Key="ShowOnHover" TargetType="Grid">
                <Setter Property="Opacity" Value="0.25"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="StackPanel.Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="PreviewGrid" DataContext="{Binding ., RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}">

        <!--<Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto" />
                <RowDefinition/>
            </Grid.RowDefinitions>-->
        <Grid  Style="{StaticResource Preview}">
            <Grid.RowDefinitions>
                <RowDefinition Height="42"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="32"/>
            </Grid.RowDefinitions>


            <ScrollViewer x:Name="ScrollViewer" Grid.Row="0"  Grid.RowSpan="3" 
                              HorizontalScrollBarVisibility="{Binding MainModel.FitToPreview, Converter={StaticResource scrollBarVisibility}, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}" 
                              VerticalScrollBarVisibility="{Binding MainModel.FitToPreview, Converter={StaticResource scrollBarVisibility}, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}"  
                              MouseMove="ScrollViewer_OnMouseMove"
                              PreviewKeyDown="ScrollViewer_OnPreviewKeyDown"
                              PreviewMouseWheel="UIElement_OnMouseWheel"  
                              PreviewKeyUp="ScrollViewer_OnPreviewKeyUp"
                              KeyDown="ScrollViewer_OnKeyDown"
                              >
                <ScrollViewer.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Fit to Preview" Command="{Binding MainModel.ToggleFitToPreview}" IsChecked="{Binding MainModel.FitToPreview}"></MenuItem>
                        <!--<MenuItem Header="Favorite (F)" ToolTip="F" InputGestureText="F" Command="{Binding FavoriteCommand}"/>
                <MenuItem Header="Rate">
                    <MenuItem Header="1" Command="{Binding RatingCommand}" CommandParameter="1"></MenuItem>
                    <MenuItem Header="2" Command="{Binding RatingCommand}" CommandParameter="2"></MenuItem>
                    <MenuItem Header="3" Command="{Binding RatingCommand}" CommandParameter="3"></MenuItem>
                    <MenuItem Header="4" Command="{Binding RatingCommand}" CommandParameter="4"></MenuItem>
                    <MenuItem Header="5" Command="{Binding RatingCommand}" CommandParameter="5"></MenuItem>
                    <MenuItem Header="6" Command="{Binding RatingCommand}" CommandParameter="6"></MenuItem>
                    <MenuItem Header="7" Command="{Binding RatingCommand}" CommandParameter="7"></MenuItem>
                    <MenuItem Header="8" Command="{Binding RatingCommand}" CommandParameter="8"></MenuItem>
                    <MenuItem Header="9" Command="{Binding RatingCommand}" CommandParameter="9"></MenuItem>
                    <MenuItem Header="10" Command="{Binding RatingCommand}" CommandParameter="10"></MenuItem>
                    <Separator></Separator>
                    <MenuItem Header="Remove rating" Click="Unrate_OnClick"></MenuItem>
                </MenuItem>-->
                        <!--<MenuItem Header="NSFW (N)" ToolTip="N" InputGestureText="N" Command="{Binding NSFWCommand}"/>
                <Separator />
                <MenuItem Header="Copy prompt"  Command="{Binding CopyPromptCommand}"/>
                <MenuItem Header="Copy negative prompt"  Command="{Binding CopyNegativePromptCommand}"/>
                <MenuItem Header="Copy seed"  Command="{Binding CopySeedCommand}"/>
                <MenuItem Header="Copy hash"  Command="{Binding CopyHashCommand}"/>
                <MenuItem Header="Copy all parameters"  Command="{Binding CopyParametersCommand}"/>
                <Separator />
                <MenuItem Header="Move"  Command="{Binding MoveCommand}"/>
                <Separator />
                <MenuItem Header="Show in explorer"  Command="{Binding ShowInExplorerCommand}"/>-->
                        <!--<Separator />
                                            <MenuItem Header="Add to Album" />
                                            <MenuItem Header="Remove from Album" />-->
                        <!--<Separator />
                <MenuItem Visibility="{Binding CurrentImage.ForDeletion, Converter={StaticResource invBoolToVisCol}}" Header="Send to Trash (X/Del)" ToolTip="Del" Command="{Binding DeleteCommand}"/>
                <MenuItem Visibility="{Binding CurrentImage.ForDeletion, Converter={StaticResource boolToVisCol}}" Header="Restore (X/Del)" ToolTip="Del" Command="{Binding DeleteCommand}"/>
                <MenuItem Header="Remove Entry (Ctrl+X/Del)"  Command="{Binding RemoveEntryCommand}"/>-->
                    </ContextMenu>

                </ScrollViewer.ContextMenu>
                <Image x:Name="Preview"
                       DataContext="{Binding Image, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}"
                       RenderOptions.BitmapScalingMode="Fant"
                       Stretch="{Binding MainModel.FitToPreview, Converter={StaticResource stretch}, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}"
                       Source="{Binding Image}" >
                    <Image.Visibility>
                        <MultiBinding Converter="{StaticResource invBoolToVisMulti}" ConverterParameter="20">
                            <Binding Path="NSFW"></Binding>
                            <Binding Path="MainModel.NSFWBlur" RelativeSource="{RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}" ></Binding>
                        </MultiBinding>
                    </Image.Visibility>
                    <Image.Effect>
                        <BlurEffect  KernelType="Gaussian">
                            <BlurEffect.Radius>
                                <MultiBinding Converter="{StaticResource boolToBlurMulti}" ConverterParameter="20">
                                    <Binding Path="NSFW"></Binding>
                                    <Binding Path="MainModel.NSFWBlur" RelativeSource="{RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}"></Binding>
                                </MultiBinding>
                            </BlurEffect.Radius>
                        </BlurEffect>
                    </Image.Effect>
                </Image>
            </ScrollViewer>

            <Grid Grid.Row="0" RowSpan="3" Background="Transparent" IsHitTestVisible="False"
                  DataContext="{Binding Image, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                  >
                <fa:ImageAwesome VerticalAlignment="Center" Height="64" Width="64" Icon="EyeSlash" Foreground="{DynamicResource ForegroundBrush}">
                    <fa:ImageAwesome.Visibility>
                        <MultiBinding Converter="{StaticResource boolToVisMulti}" ConverterParameter="20">
                            <Binding Path="NSFW" ></Binding>
                            <Binding Path="MainModel.NSFWBlur" RelativeSource="{RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}"></Binding>
                        </MultiBinding>
                    </fa:ImageAwesome.Visibility>
                </fa:ImageAwesome>
            </Grid>

            <Grid  Grid.Row="0" Background="{x:Null}"  IsHitTestVisible="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="16"/>
                </Grid.ColumnDefinitions>
                <Grid Visibility="{Binding IsPopout, Converter={StaticResource invBoolToVis}, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}" Grid.Column="1" Background="Transparent" >
                    <Button Style="{DynamicResource BorderlessButton}" Grid.Column="3" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Click="Popout_OnClick">
                        <fa:ImageAwesome ToolTip="Pop out" Icon="WindowRestore" Width="24"  Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <fa:ImageAwesome.Effect>
                                <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="3" Direction="-90"></DropShadowEffect>
                            </fa:ImageAwesome.Effect>
                        </fa:ImageAwesome>
                    </Button>
                </Grid>
            </Grid>

            <Grid  Grid.Row="0" RowSpan="3"  Margin="10"  Background="{x:Null}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                >
                <Grid  Background="{x:Null}"
                       DataContext="{Binding Image, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}"
                       >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="48"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="56"/>
                    </Grid.RowDefinitions>
                    <!--
                        Remove Fade effect as showing the preview causes it to flicker on momentarily
                        classes:VisibilityAnimation.AnimationType="Fade" 
                    -->
                    <Grid  Grid.Row="1"
                           Visibility="{Binding IsParametersVisible, Converter={StaticResource boolToVis}}" Margin="10" Background="Transparent" VerticalAlignment="Bottom"
                    >
                        <Grid Margin="-20" Background="Transparent"></Grid>

                        <ScrollViewer VerticalScrollBarVisibility="Auto">

                            <StackPanel Background="#AF000000">

                                <Grid  Background="Transparent" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Foreground="White"  Background="#00000000" FontSize="14" BorderThickness="0"
                                                 IsReadOnly="True"
                                                 Padding="5" TextWrapping="WrapWithOverflow" Text="{Binding Prompt}"></TextBox>
                                    <Button Style="{DynamicResource BorderlessButton}"  Grid.Column="1" Command="{Binding CopyPromptCommand}" >
                                        <Image Source="{DynamicResource CopyIcon}" Height="16" Width="16" ToolTip="Copy to clipboard"></Image>
                                    </Button>
                                </Grid>

                                <Grid Background="Transparent" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Foreground="White"  Background="#00000000" FontSize="14" BorderThickness="0"
                                                 IsReadOnly="True"
                                                 Padding="5" TextWrapping="WrapWithOverflow" Text="{Binding NegativePrompt}"></TextBox>
                                    <Button Style="{DynamicResource BorderlessButton}" Grid.Column="1" Command="{Binding CopyNegativePromptCommand}" >
                                        <Image Source="{DynamicResource CopyIcon}" Height="16" Width="16" ToolTip="Copy to clipboard"></Image>
                                    </Button>
                                </Grid>

                                <Grid Background="Transparent" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Foreground="White"  Background="#00000000" FontSize="14" BorderThickness="0"
                                                 IsReadOnly="True"
                                                 Padding="5" TextWrapping="WrapWithOverflow" Text="{Binding OtherParameters}"></TextBox>
                                    <!--<Button Style="{DynamicResource BorderlessButton}" Grid.Column="1" Command="{Binding CopyOthersCommand}" >
                                            <Image Source="{DynamicResource CopyIcon}" Height="16" Width="16" ToolTip="Copy to clipboard"></Image>
                                        </Button>-->
                                    <Grid Opacity="0.5" Grid.Column="1"></Grid>
                                </Grid>


                                <Grid  Background="Transparent" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Foreground="White" FontSize="14" BorderThickness="0"
                                             IsReadOnly="True" Padding="5" Background="Transparent" TextWrapping="WrapWithOverflow" Text="{Binding ModelName}"></TextBox>
                                    <Grid Opacity="0.5" Grid.Column="1"></Grid>
                                </Grid>

                                <Grid  Background="Transparent" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Foreground="White"  Background="#00000000" FontSize="14" BorderThickness="0"
                                                 IsReadOnly="True"
                                                 Padding="5" TextWrapping="WrapWithOverflow" Text="{Binding Path}"></TextBox>
                                    <Button Style="{DynamicResource BorderlessButton}"  Grid.Column="1" Command="{Binding CopyPathCommand}" >
                                        <Image Source="{DynamicResource CopyIcon}" Height="16" Width="16" ToolTip="Copy to clipboard"></Image>
                                    </Button>
                                </Grid>

                                <Grid  Background="Transparent" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="32"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation = "Horizontal">
                                        <TextBox Foreground="White" FontSize="14" BorderThickness="0"
                                             IsReadOnly="True" Padding="5" Background="Transparent" TextWrapping="WrapWithOverflow" Text="{Binding Date}"></TextBox>
                                        <TextBlock>
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Width}" Value="0">
                                                            <Setter Property="Visibility" Value="Hidden"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Height}" Value="0">
                                                            <Setter Property="Visibility" Value="Hidden"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                            <TextBlock Foreground="White" FontSize="14" Padding="15 5 0 0" Background="Transparent" TextWrapping="WrapWithOverflow" Text="{Binding Width}"></TextBlock>
                                            <TextBlock Foreground="White" FontSize="14" Padding="0 4 0 0" Background="Transparent" TextWrapping="WrapWithOverflow" Text="x"></TextBlock>
                                            <TextBlock Foreground="White" FontSize="14" Padding="0 5 5 0" Background="Transparent" TextWrapping="WrapWithOverflow" Text="{Binding Height}"></TextBlock>
                                        </TextBlock>
                                    </StackPanel>
                                    <Grid Opacity="0.5" Grid.Column="1"></Grid>
                                </Grid>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>

                    <Grid Grid.Row="2" Background="{x:Null}" IsHitTestVisible="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="16"/>
                        </Grid.ColumnDefinitions>

                        <Button Background="Transparent" Style="{DynamicResource BorderlessButton}" Grid.Column="1" Command="{Binding CopyParametersCommand}">
                            <fa:ImageAwesome ToolTip="Copy Parameters" Icon="FileText" Width="20"  Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <fa:ImageAwesome.Effect>
                                    <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="3" Direction="-90"></DropShadowEffect>
                                </fa:ImageAwesome.Effect>
                            </fa:ImageAwesome>
                        </Button>

                        <Button Background="Transparent" Style="{DynamicResource BorderlessButton}" Grid.Column="2" Command="{Binding ShowInExplorerCommand}">
                            <fa:ImageAwesome ToolTip="Show in Explorer" Icon="ExternalLink" Width="24"  Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <fa:ImageAwesome.Effect>
                                    <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="3" Direction="-90"></DropShadowEffect>
                                </fa:ImageAwesome.Effect>
                            </fa:ImageAwesome>
                        </Button>

                        <Button Style="{DynamicResource BorderlessButton}" Grid.Column="3" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Command="{Binding ToggleParameters}">
                            <fa:ImageAwesome ToolTip="Show info (I)" Icon="Eye" Width="24"  Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <fa:ImageAwesome.Effect>
                                    <DropShadowEffect BlurRadius="4" Opacity="0.8" ShadowDepth="3" Direction="-90"></DropShadowEffect>
                                </fa:ImageAwesome.Effect>
                            </fa:ImageAwesome>
                        </Button>

                    </Grid>

                    <StackPanel Orientation="Horizontal" Grid.Row="2" DataContext="{Binding Image, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}">
                        <Image Height="32" Width="32" Source="/Icons/Dark/trash-32.png" Visibility="{Binding Path=ForDeletion, Converter={StaticResource boolToVisCol}}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>


                        <Image Height="32" Width="32" Source="../Icons/blue-heart-32.png" Visibility="{Binding Path=Favorite, Converter={StaticResource boolToVisCol}}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=1}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=2}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=3}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=4}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=5}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=6}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=7}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=8}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=9}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Image Height="32" Width="32" Source="../Icons/star-32.png" Visibility="{Binding Path=Rating, Converter={StaticResource intToVis}, ConverterParameter=10}">
                            <Image.Effect>
                                <DropShadowEffect BlurRadius="5" Opacity="0.8"  ShadowDepth="6" Direction="-90" RenderingBias="Quality" />
                            </Image.Effect>
                        </Image>

                        <Border Height="40" Width="40" CornerRadius="5" Background="#90000000" Visibility="{Binding Path=AestheticScore, Converter={StaticResource strToVis}, ConverterParameter=10}">
                            <Label FontSize="18" FontWeight="Bold" Content="{Binding AestheticScore}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"></Label>
                        </Border>

                    </StackPanel>
                </Grid>
            </Grid>

        </Grid>

    </Grid>
</UserControl>
