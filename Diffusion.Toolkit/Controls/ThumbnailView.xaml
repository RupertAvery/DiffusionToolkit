<UserControl x:Class="Diffusion.Toolkit.Controls.ThumbnailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Diffusion.Toolkit.Controls"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:toolkit="clr-namespace:Diffusion.Toolkit"
             xmlns:converters="clr-namespace:Diffusion.Toolkit.Converters"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:localization="clr-namespace:Diffusion.Toolkit.Localization"
             xmlns:behaviors="clr-namespace:Diffusion.Toolkit.Behaviors"
             lex:LocalizeDictionary.Provider="{StaticResource LocalizationProvider}"
             lex:LocalizeDictionary.Separation="."
             lex:LocalizeDictionary.DefaultProvider="{StaticResource LocalizationProvider}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:InverseBoolToVisibilityCollapsedConverter x:Key="invBoolToVisCol"></converters:InverseBoolToVisibilityCollapsedConverter>
            <converters:BoolToVisibilityCollapsedConverter x:Key="boolToVisCol"></converters:BoolToVisibilityCollapsedConverter>
            <converters:InverseBoolToVisibilityConverter x:Key="invBoolToVis"></converters:InverseBoolToVisibilityConverter>
            <converters:IntToVisibilityConverter x:Key="intToVis"></converters:IntToVisibilityConverter>
            <converters:StringToVisibilityConverter x:Key="strToVis"></converters:StringToVisibilityConverter>
            <converters:BoolToBlurIntConverter x:Key="boolToBlur"></converters:BoolToBlurIntConverter>
            <converters:BoolToBlurIntMultiConverter x:Key="boolToBlurMulti"></converters:BoolToBlurIntMultiConverter>
            <converters:BoolToVisibilityConverter x:Key="boolToVis"></converters:BoolToVisibilityConverter>
            <converters:BoolToVisibilityMultiConverter x:Key="boolToVisMulti"></converters:BoolToVisibilityMultiConverter>
            <converters:InverseBoolToVisibilityMultiConverter x:Key="invBoolToVisMulti"></converters:InverseBoolToVisibilityMultiConverter>
            <converters:BoolToOpacityConverter x:Key="BoolToOpacity"></converters:BoolToOpacityConverter>
            <converters:FileEntryTypeVisibilityConverter x:Key="fileEntryTypeVis"></converters:FileEntryTypeVisibilityConverter>
            <converters:AlbumModeVisibilityConverter x:Key="albumModeVis"></converters:AlbumModeVisibilityConverter>
            <local:ThumbnailTemplateSelector x:Key="ThumbnailTemplateSelector"></local:ThumbnailTemplateSelector>

            <DataTemplate x:Key="FolderDataTemplate" DataType="{x:Type toolkit:ImageEntry}">
                <Grid
                    Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                    Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                    >
                    <fa:ImageAwesome 
                        Height="128"
                        Icon="FolderOutlinepenOutline"
                        Foreground="{DynamicResource ForegroundBrush}" 
                        HorizontalAlignment="Center" VerticalAlignment="Center"></fa:ImageAwesome>
                </Grid>

            </DataTemplate>

            <DataTemplate x:Key="AlbumDataTemplate" DataType="{x:Type toolkit:ImageEntry}">
                <Grid
                    Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                    Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                >
                    <fa:ImageAwesome Icon="FilePhotoOutline"
                                     Height="128"
                                     Foreground="{DynamicResource ForegroundBrush}" 
                                     HorizontalAlignment="Center" VerticalAlignment="Center">
                        <fa:ImageAwesome.ContextMenu>
                            <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header="Rename Album" Click="RenameAlbum_OnClick"></MenuItem>
                                <MenuItem Header="Remove Album" Click="RemoveAlbum_OnClick"></MenuItem>
                            </ContextMenu>
                        </fa:ImageAwesome.ContextMenu>

                    </fa:ImageAwesome>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="FileDataTemplate" DataType="{x:Type toolkit:ImageEntry}">
                <Grid Background="Transparent">
                    <local:Thumbnail 
                        Source="{Binding Thumbnail}" 
                        Foreground="{DynamicResource ForegroundBrush}"
                        Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                        Data="{Binding .}"
                        Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                        MaxWidth="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" MaxHeight="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                        HorizontalAlignment="Stretch" VerticalAlignment="Top">

                        <local:Thumbnail.Effect>
                            <BlurEffect  KernelType="Gaussian">
                                <BlurEffect.Radius>
                                    <MultiBinding Converter="{StaticResource boolToBlurMulti}" ConverterParameter="20">
                                        <Binding Path="NSFW"></Binding>
                                        <Binding ElementName="ThumbnailListView" Path="DataContext.NSFWBlur" ></Binding>
                                    </MultiBinding>
                                </BlurEffect.Radius>
                            </BlurEffect>
                        </local:Thumbnail.Effect>
                    </local:Thumbnail>
                    <Grid Background="{x:Null}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <local:ThumbnailIcons Grid.Row="1"
                        Data="{Binding .}"
                        Height="32"
                        ></local:ThumbnailIcons>
                    </Grid>
                </Grid>
            </DataTemplate>

        </ResourceDictionary>

    </UserControl.Resources>
    <Grid  DataContext="{Binding Path=Model, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Visibility="{Binding IsEmpty, Converter={StaticResource boolToVis}}" 
               Style="{StaticResource TitleText}"
               Content="{Binding ResultStatus}"
               VerticalContentAlignment="Center" 
               HorizontalContentAlignment="Center" 
        ></Label>


        <!--<ListView Grid.Row="0" x:Name="ThumbnailListView2" Margin="2" Padding="10" ItemsSource="{Binding Images}">
            <ListView.Template>
                <ControlTemplate >
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Background="Transparent">
                        <WrapPanel IsItemsHost="True" />
                    </ScrollViewer>
                </ControlTemplate>
            </ListView.Template>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" Background="Transparent" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

        </ListView>-->


        <ListView Grid.Row="0" x:Name="ThumbnailListView"   Margin="2" Padding="10" ItemsSource="{Binding Images}"
                  SelectionMode="Extended"
                  SelectedItem="{Binding SelectedImageEntry}"
                  SelectionChanged="ThumbnailListView_OnSelectionChanged"
                  KeyDown="ThumbnailListView_OnKeyDown"
                  PreviewKeyDown="ThumbnailListView_OnPreviewKeyDown"
                  PreviewMouseLeftButtonDown="ThumbnailListView_OnPreviewMouseLeftButtonDown"
                  MouseDown="ThumbnailListView_OnMouseDown"
                  MouseUp="ThumbnailListView_OnMouseUp"
                  PreviewMouseLeftButtonUp="ThumbnailListView_OnPreviewMouseLeftButtonUp"
                  MouseMove="ThumbnailListView_OnMouseMove"
                  MouseDoubleClick="Control_OnMouseDoubleClick"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  behaviors:ScrollSpeed.ScrollSpeed="11.5"
                  Tag="{Binding Path=.}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                                                    Value="{DynamicResource HighlightBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="true">
                                        <Setter TargetName="Border" Property="Background"
                                                Value="{DynamicResource FocusedBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="IsFocused" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter TargetName="Border" Property="Background"
                                                    Value="{DynamicResource HighlightFocusedBrush}"/>
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
            <ListView.InputBindings>
                <KeyBinding Command="{Binding PrevPage}" Key="PageUp" Modifiers="Alt" Gesture="ALT+PageUp"></KeyBinding>
                <KeyBinding Command="{Binding NextPage}" Key="PageDown" Modifiers="Alt" Gesture="ALT+PageDown"></KeyBinding>
                <KeyBinding Command="{Binding FirstPage}" Key="Home" Modifiers="Alt" Gesture="ALT+Home"></KeyBinding>
                <KeyBinding Command="{Binding LastPage}" Key="End" Modifiers="Alt" Gesture="ALT+End"></KeyBinding>
                <KeyBinding Command="{Binding CopyFiles}" Key="C" Modifiers="Control" Gesture="Control+C"></KeyBinding>
                <KeyBinding Command="{Binding FocusSearch}" Key="F6" Gesture="F6"></KeyBinding>
                <KeyBinding Command="{Binding ToggleParameters}" Key="I"></KeyBinding>
            </ListView.InputBindings>
            <ListView.ContextMenu>
                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                    <MenuItem ItemsSource="{Binding AlbumMenuItems}" x:Name="AlbumMenu" Header="{lex:Loc Thumbnail.ContextMenu.AddToAlbum}" >
                        <!--<MenuItem Header="_New Album" Click="CreateAlbum_OnClick"></MenuItem>
                                                <Separator></Separator>-->
                    </MenuItem>
                    <MenuItem Visibility="{Binding ViewMode, Converter={StaticResource albumModeVis}}" Header="{lex:Loc Thumbnail.ContextMenu.RemoveFromAlbum}" Click="RemoveFromAlbum_OnClick"></MenuItem>
                    <Separator />
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Favorite}" ToolTip="F" InputGestureText="F" Command="{Binding FavoriteCommand}"/>
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate}">
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.1}" Command="{Binding RatingCommand}" CommandParameter="1"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.2}" Command="{Binding RatingCommand}" CommandParameter="2"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.3}" Command="{Binding RatingCommand}" CommandParameter="3"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.4}" Command="{Binding RatingCommand}" CommandParameter="4"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.5}" Command="{Binding RatingCommand}" CommandParameter="5"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.6}" Command="{Binding RatingCommand}" CommandParameter="6"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.7}" Command="{Binding RatingCommand}" CommandParameter="7"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.8}" Command="{Binding RatingCommand}" CommandParameter="8"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.9}" Command="{Binding RatingCommand}" CommandParameter="9"></MenuItem>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.10}" Command="{Binding RatingCommand}" CommandParameter="10"></MenuItem>
                        <Separator></Separator>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Rate.Remove}" Click="Unrate_OnClick"></MenuItem>
                    </MenuItem>
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.NSFW}" ToolTip="N" InputGestureText="N" Command="{Binding NSFWCommand}"/>
                    <Separator />
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.CopyParameter}">
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.CopyParameter.Prompt}"  Command="{Binding CopyPromptCommand}"/>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.CopyParameter.NegativePrompt}"  Command="{Binding CopyNegativePromptCommand}"/>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.CopyParameter.Seed}"  Command="{Binding CopySeedCommand}"/>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.CopyParameter.Hash}"  Command="{Binding CopyHashCommand}"/>
                        <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.CopyParameter.All}"  Command="{Binding CopyParametersCommand}"/>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Copy}" InputGestureText="Ctrl+C" Command="{Binding CopyCommand}" />
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Move}" Command="{Binding MoveCommand}"/>
                    <Separator />
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.ShowInExplorer}"  Command="{Binding ShowInExplorerCommand}"/>
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.ExpandToFolder}"  Command="{Binding ExpandToFolderCommand}"/>
                    <Separator />
                    <MenuItem Visibility="{Binding CurrentImage.ForDeletion, Converter={StaticResource invBoolToVisCol}}" Header="{lex:Loc Thumbnail.ContextMenu.SendToTrash}" InputGestureText="X/Del" ToolTip="Remove" Command="{Binding DeleteCommand}"/>
                    <MenuItem Visibility="{Binding CurrentImage.ForDeletion, Converter={StaticResource boolToVisCol}}" Header="{lex:Loc Thumbnail.ContextMenu.Restore}" InputGestureText="X/Del" ToolTip="Restore" Command="{Binding DeleteCommand}"/>
                    <MenuItem Header="{lex:Loc Thumbnail.ContextMenu.Remove}" InputGestureText="Ctrl+X/Del" Command="{Binding RemoveEntryCommand}"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.Template>
                <ControlTemplate >
                    <ScrollViewer ScrollChanged="ScrollViewer_OnScrollChanged" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Background="Transparent">
                        <WrapPanel IsItemsHost="True" />
                    </ScrollViewer>
                </ControlTemplate>
            </ListView.Template>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" Background="Transparent" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border 
                                Height="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" 
                                Width="{Binding DataContext.ThumbnailSize, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" Margin="12" >
                            <ContentControl Content="{Binding Path=.}" ContentTemplateSelector="{DynamicResource ThumbnailTemplateSelector}"/>
                        </Border>
                        <Label Grid.Row="1" HorizontalContentAlignment="Center" Content="{Binding Name}">
                        </Label>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0"  
                         VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch" 
                         VerticalContentAlignment="Center"
                         Content="{Binding Results}"
                ></Label>
            <StackPanel Grid.Column="1"   Orientation="Horizontal">
                <Button Style="{DynamicResource BorderlessButton}" Width="24" IsEnabled="{Binding FirstPageEnabled}" ToolTip="{lex:Loc Thumbnail.Pagination.First}" Click="FirstPage_OnClick">
                    <fa:ImageAwesome Icon="FastBackward" Width="16" Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
                <Button Style="{DynamicResource BorderlessButton}" Width="24" IsEnabled="{Binding PrevPageEnabled}" ToolTip="{lex:Loc Thumbnail.Pagination.Previous}" Click="PrevPage_OnClick">
                    <fa:ImageAwesome Icon="Backward" Width="14" Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
                <TextBox  
                        MinWidth="30"
                             VerticalAlignment="Stretch" 
                             HorizontalAlignment="Stretch" 
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Center"
                             KeyDown="Page_OnKeyDown"
                             Text="{Binding Page, UpdateSourceTrigger=PropertyChanged}"
                    ></TextBox>
                <Label
                           VerticalAlignment="Stretch" 
                           HorizontalAlignment="Stretch" 
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Content="/"
                    ></Label>
                <Label   
                            MinWidth="30"
                           VerticalAlignment="Stretch" 
                           HorizontalAlignment="Stretch" 
                           VerticalContentAlignment="Center"
                           HorizontalContentAlignment="Center"
                           Content="{Binding Pages}"
                    ></Label>
                <Button Style="{DynamicResource BorderlessButton}" Width="24" IsEnabled="{Binding NextPageEnabled}" ToolTip="{lex:Loc Thumbnail.Pagination.Next}" Click="NextPage_OnClick">
                    <fa:ImageAwesome Icon="Forward" Width="14" Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
                <Button Style="{DynamicResource BorderlessButton}" Width="24" IsEnabled="{Binding LastPageEnabled}" ToolTip="{lex:Loc Thumbnail.Pagination.Last}" Click="LastPage_OnClick">
                    <fa:ImageAwesome Icon="FastForward" Width="16" Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
